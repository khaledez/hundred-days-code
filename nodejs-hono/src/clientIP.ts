import { getConnInfo } from "@hono/node-server/conninfo";
import { Context } from "hono";

export default function getRealClientIPAddress(ctx: Context): string {
  if (ctx.req.header("Forwarded")) {
    const clientIP = getLastIpAddress(ctx.req.header("Forwarded")!);
    if (clientIP) {
      return clientIP;
    }
  }

  if (ctx.req.header("X-Forwarded-For")) {
    return ctx.req.header("X-Forwarded-For")!;
  }

  return getConnInfo(ctx)?.remote?.address || "unknown";
}

// Kindly generated by ChatGPT
// Regular expression to match IPv4 and IPv6 addresses in the "for" field
const pattern = /for=(\[[\w:.]+\]|[\w:.]+)/;
function getLastIpAddress(forwardedHeader: string): string | null {
  // Split the forwarded header by commas to handle multiple values
  const forwardedValues = forwardedHeader.split(",");

  let lastIp: string | null = null;

  // Loop through each forwarded value
  for (const forwardedValue of forwardedValues) {
    const match = pattern.exec(forwardedValue);
    if (match) {
      lastIp = match[1]; // Get the IP from the last "for" field
    }
  }

  return lastIp;
}
